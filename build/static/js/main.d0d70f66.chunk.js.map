{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","hooks/use-http.js","lib/api.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","isEntered","setIsEntereing","authorInputRef","useRef","textInputRef","when","onFocus","console","log","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","trim","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetails","params","useParams","path","exact","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0d70f66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/questions/${props.id}`} className=\"btn\">\n        Details\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.text > quoteB.text ? 1 : -1;\n    } else {\n      return quoteA.text < quoteB.text ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const querryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = querryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push(\"/questions?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n  \"https://quotez-94a47-default-rtdb.europe-west1.firebasedatabase.app\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-question\" className=\"btn\">\n        Add a Question\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return (\n    <>\n      <QuoteList quotes={loadedQuotes} />\n    </>\n  );\n};\n\nexport default AllQuotes;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntereing] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    if (enteredText.trim() === \"\" || enteredAuthor.trim === \"\") return;\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    console.log(isEntered);\n    setIsEntereing(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntereing(false);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntered}\n        message={(location) =>\n          \"Are you sure you want to leave? All your data will be lost\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Question\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router-dom\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\n\nconst NewQuote = () => {\n  const history = useHistory();\n  const { sendRequest, status } = useHttp(addQuote);\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/questions\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n\n  return (\n    <>\n      <QuoteForm\n        isLoading={status === \"pending\"}\n        onAddQuote={addQuoteHandler}\n      />\n    </>\n  );\n};\n\nexport default NewQuote;\n","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    if (enteredText.trim() === \"\") {\n      return;\n    }\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const quoteId = props.quoteId;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments,\n    error,\n  } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  let comments;\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    console.log(\"object\");\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = (\n      <p className=\"centered\">No comments yet. Be the first one to add!</p>\n    );\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={props.quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment } from \"react\";\nimport { useParams, Route, Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetails = () => {\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    console.log(quoteId);\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) return <p>No question foudn</p>;\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={`/questions/${params.quoteId}/`} exact>\n        <div className=\"centered\">\n          <Link\n            className=\"btn--flat\"\n            to={`/questions/${params.quoteId}/comments`}\n          >\n            Show comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`/questions/${params.quoteId}/comments`}>\n        <Comments quoteId={quoteId} />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetails;\n","import { NavLink } from \"react-router-dom\";\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>QuestionZ</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/questions\" activeClassName={classes.active}>\n              All Questions\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-question\" activeClassName={classes.active}>\n              Add Question\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import MainNavigation from \"./MainNavigation\";\nimport classes from \"./Layout.module.css\";\nimport { Fragment } from \"react\";\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","const NotFound = () => {\n  return (\n    <div className=\"centered\">\n      <p>Page not found!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetails from \"./pages/QuoteDetails\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/questions\" />\n        </Route>\n        <Route path=\"/questions\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/questions/:quoteId\">\n          <QuoteDetails />\n        </Route>\n        <Route path=\"/new-question\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}